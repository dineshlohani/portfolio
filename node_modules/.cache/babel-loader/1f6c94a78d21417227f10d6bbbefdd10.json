{"ast":null,"code":"var _jsxFileName = \"D:\\\\finalportfolio\\\\src\\\\components\\\\intro\\\\time.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RealTimeClock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: new Date()\n    };\n  }\n\n  componentDidMount() {\n    // Update the time every second\n    this.intervalId = setInterval(() => {\n      this.setState({\n        currentTime: new Date()\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    // Clear the interval when the component is unmounted\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const {\n      currentTime\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real Time Clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Time: \", currentTime.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Date: \", currentTime.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RealTimeClock;","map":{"version":3,"names":["React","Component","RealTimeClock","constructor","props","state","currentTime","Date","componentDidMount","intervalId","setInterval","setState","componentWillUnmount","clearInterval","render","toLocaleTimeString","toDateString"],"sources":["D:/finalportfolio/src/components/intro/time.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass RealTimeClock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentTime: new Date()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Update the time every second\r\n    this.intervalId = setInterval(() => {\r\n      this.setState({ currentTime: new Date() });\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Clear the interval when the component is unmounted\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  render() {\r\n    const { currentTime } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Real Time Clock</h1>\r\n        <p>Current Time: {currentTime.toLocaleTimeString()}</p>\r\n        <p>Current Date: {currentTime.toDateString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RealTimeClock;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;EACpCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAE,IAAIC,IAAJ;IADF,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB;IACA,KAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;MAClC,KAAKC,QAAL,CAAc;QAAEL,WAAW,EAAE,IAAIC,IAAJ;MAAf,CAAd;IACD,CAF4B,EAE1B,IAF0B,CAA7B;EAGD;;EAEDK,oBAAoB,GAAG;IACrB;IACAC,aAAa,CAAC,KAAKJ,UAAN,CAAb;EACD;;EAEDK,MAAM,GAAG;IACP,MAAM;MAAER;IAAF,IAAkB,KAAKD,KAA7B;IAEA,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,6BAAkBC,WAAW,CAACS,kBAAZ,EAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,6BAAkBT,WAAW,CAACU,YAAZ,EAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;AA/BmC;;AAkCtC,eAAed,aAAf"},"metadata":{},"sourceType":"module"}